// <auto-generated />
using System;
using BuySell.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuySell.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200323133439_minor")]
    partial class minor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BuySell.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("RegistredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BuySell.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BlogBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("BlogTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 5, 5, 59, 23, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Hələdə smartfonu ən sərfəli qiymətə haradan alacağını düşünürsən?",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 2, 6, 46, 12, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Kampaniya başa çatana qədər yalnız bir neçə gün qaldı!",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        },
                        new
                        {
                            Id = 3,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 23, 0, 44, 55, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Sifarişçilərin nəzərinə!",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        },
                        new
                        {
                            Id = 4,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 13, 10, 53, 36, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Hörmətlə , saytın administrasiyası !",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        },
                        new
                        {
                            Id = 5,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 16, 3, 40, 5, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Fiziki şəxslər üçün mobil telefonlu bağlamaların Gömrük idarəsi tərəfindən təhvil verilmə qaydaları dəyişdirilmişdir.",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        },
                        new
                        {
                            Id = 6,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 7, 20, 37, 6, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Hər bir şəkildə gözəllik",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        },
                        new
                        {
                            Id = 7,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 9, 0, 44, 12, 0, DateTimeKind.Local),
                            BlogBody = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. ",
                            BlogTitle = "Qutu açılımı çək - endirim qazan!",
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0
                        });
                });

            modelBuilder.Entity("BuySell.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Elektronika"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Telefonlar",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mobil aksesuarlar",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tv və Audio",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Apple",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Samsung",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Xiaomi",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Panasonic",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "Nokia",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "LG",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 11,
                            Name = "Honor",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 12,
                            Name = "Keyslər",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 13,
                            Name = "Səs qurğuları",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 14,
                            Name = "Smart Saatlar",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 15,
                            Name = "Qulaqlıqlar",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "Adapter",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "Digər",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 18,
                            Name = "Video pleyerlər",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 19,
                            Name = "Audio pleyerlər",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 20,
                            Name = "Televizorlar",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "Proyektorlər",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 22,
                            Name = "Kompüterlər"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Notbuklar",
                            ParentId = 22
                        },
                        new
                        {
                            Id = 24,
                            Name = "Masaüstü Kompüterlər",
                            ParentId = 22
                        },
                        new
                        {
                            Id = 25,
                            Name = "Tabletlər",
                            ParentId = 22
                        },
                        new
                        {
                            Id = 26,
                            Name = "Periferiya Qurğuları",
                            ParentId = 22
                        },
                        new
                        {
                            Id = 27,
                            Name = "Printerlər",
                            ParentId = 26
                        },
                        new
                        {
                            Id = 28,
                            Name = "Xarici disklər",
                            ParentId = 26
                        },
                        new
                        {
                            Id = 29,
                            Name = "Secondary Hardware",
                            ParentId = 26
                        },
                        new
                        {
                            Id = 30,
                            Name = "Monitorlar",
                            ParentId = 26
                        },
                        new
                        {
                            Id = 31,
                            Name = "Oyunlar"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Oyun Konsolları",
                            ParentId = 31
                        },
                        new
                        {
                            Id = 33,
                            Name = "Oyun Nəzarətçiləri",
                            ParentId = 31
                        },
                        new
                        {
                            Id = 34,
                            Name = "Video Oyunlar",
                            ParentId = 31
                        });
                });

            modelBuilder.Entity("BuySell.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("CommentTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CommentatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ProductId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BuySell.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CancelationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BuySell.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BuySell.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 9, 4, 20, 12, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-1.jpeg",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 7, 2, 58, 35, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-2.jpeg",
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 1, 10, 38, 18, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-3.jpeg",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 5, 23, 22, 39, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-4.jpeg",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 5,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 22, 10, 4, 2, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-5.jpeg",
                            ProductId = 5
                        },
                        new
                        {
                            Id = 6,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 25, 23, 8, 12, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-6.jpeg",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 7,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 1, 13, 37, 58, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-7.jpeg",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 19, 3, 48, 59, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-8.jpeg",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 9,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 28, 15, 28, 32, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-9.jpeg",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 10,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 17, 1, 41, 12, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-10.jpeg",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 11,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 5, 19, 34, 20, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-11.jpeg",
                            ProductId = 11
                        },
                        new
                        {
                            Id = 12,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 20, 22, 14, 28, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-12.jpeg",
                            ProductId = 12
                        },
                        new
                        {
                            Id = 13,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 26, 11, 55, 23, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-13.jpeg",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 14,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 26, 12, 40, 33, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-14.jpeg",
                            ProductId = 14
                        },
                        new
                        {
                            Id = 15,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 10, 14, 17, 49, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-15.jpeg",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 16,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 12, 19, 52, 18, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-16.jpeg",
                            ProductId = 16
                        },
                        new
                        {
                            Id = 17,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 22, 8, 23, 46, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-17.jpeg",
                            ProductId = 17
                        },
                        new
                        {
                            Id = 18,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 10, 13, 25, 55, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-18.jpeg",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 19,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 29, 5, 33, 10, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-19.jpeg",
                            ProductId = 19
                        },
                        new
                        {
                            Id = 20,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 11, 3, 47, 36, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-20.jpeg",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 21,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 11, 18, 8, 17, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-21.jpeg",
                            ProductId = 21
                        },
                        new
                        {
                            Id = 22,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 17, 14, 44, 3, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-22.jpeg",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 23,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 11, 23, 13, 7, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-23.jpeg",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 24,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 14, 17, 20, 21, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-24.jpeg",
                            ProductId = 24
                        },
                        new
                        {
                            Id = 25,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 18, 15, 12, 9, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-25.jpeg",
                            ProductId = 25
                        },
                        new
                        {
                            Id = 26,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 15, 6, 22, 7, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-26.jpeg",
                            ProductId = 26
                        },
                        new
                        {
                            Id = 27,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 29, 15, 46, 25, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-27.jpeg",
                            ProductId = 27
                        },
                        new
                        {
                            Id = 28,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 19, 17, 56, 58, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-28.jpeg",
                            ProductId = 28
                        },
                        new
                        {
                            Id = 29,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 22, 22, 24, 47, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-29.jpeg",
                            ProductId = 29
                        },
                        new
                        {
                            Id = 30,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 17, 3, 18, 36, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-30.jpeg",
                            ProductId = 30
                        },
                        new
                        {
                            Id = 31,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 15, 0, 51, 49, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-31.jpeg",
                            ProductId = 31
                        },
                        new
                        {
                            Id = 32,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 11, 9, 42, 8, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-32.jpeg",
                            ProductId = 32
                        },
                        new
                        {
                            Id = 33,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 18, 11, 45, 37, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-33.jpeg",
                            ProductId = 33
                        },
                        new
                        {
                            Id = 34,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 27, 9, 46, 16, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-34.jpeg",
                            ProductId = 34
                        },
                        new
                        {
                            Id = 35,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 19, 6, 43, 22, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-35.jpeg",
                            ProductId = 35
                        },
                        new
                        {
                            Id = 36,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 28, 13, 24, 8, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-36.jpeg",
                            ProductId = 36
                        },
                        new
                        {
                            Id = 37,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 8, 8, 39, 6, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-37.jpeg",
                            ProductId = 37
                        },
                        new
                        {
                            Id = 38,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 6, 15, 13, 9, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-38.jpeg",
                            ProductId = 38
                        },
                        new
                        {
                            Id = 39,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 15, 20, 48, 58, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-39.jpeg",
                            ProductId = 39
                        },
                        new
                        {
                            Id = 40,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 12, 4, 27, 13, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-40.jpeg",
                            ProductId = 40
                        },
                        new
                        {
                            Id = 41,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 17, 17, 50, 10, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-41.jpeg",
                            ProductId = 41
                        },
                        new
                        {
                            Id = 42,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 2, 19, 25, 41, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-42.jpeg",
                            ProductId = 42
                        },
                        new
                        {
                            Id = 43,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 16, 18, 26, 31, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-43.jpeg",
                            ProductId = 43
                        },
                        new
                        {
                            Id = 44,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 29, 2, 14, 25, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-44.jpeg",
                            ProductId = 44
                        },
                        new
                        {
                            Id = 45,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 15, 10, 3, 39, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-45.jpeg",
                            ProductId = 45
                        },
                        new
                        {
                            Id = 46,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 26, 13, 1, 55, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-46.jpeg",
                            ProductId = 46
                        },
                        new
                        {
                            Id = 47,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 16, 9, 12, 15, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-47.jpeg",
                            ProductId = 47
                        },
                        new
                        {
                            Id = 48,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 23, 18, 23, 44, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-48.jpeg",
                            ProductId = 48
                        },
                        new
                        {
                            Id = 49,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 20, 17, 35, 56, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-49.jpeg",
                            ProductId = 49
                        },
                        new
                        {
                            Id = 50,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 29, 11, 29, 24, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-50.jpeg",
                            ProductId = 50
                        },
                        new
                        {
                            Id = 51,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 18, 19, 30, 59, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-51.jpeg",
                            ProductId = 51
                        },
                        new
                        {
                            Id = 52,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 2, 6, 40, 8, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-52.jpeg",
                            ProductId = 52
                        },
                        new
                        {
                            Id = 53,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 16, 18, 14, 45, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-53.jpeg",
                            ProductId = 53
                        },
                        new
                        {
                            Id = 54,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 20, 1, 29, 47, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-54.jpeg",
                            ProductId = 54
                        },
                        new
                        {
                            Id = 55,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 27, 11, 30, 17, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-55.jpeg",
                            ProductId = 55
                        },
                        new
                        {
                            Id = 56,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 23, 9, 22, 42, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-56.jpeg",
                            ProductId = 56
                        },
                        new
                        {
                            Id = 57,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 27, 22, 31, 1, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-57.jpeg",
                            ProductId = 57
                        },
                        new
                        {
                            Id = 58,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 19, 12, 4, 29, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-58.jpeg",
                            ProductId = 58
                        },
                        new
                        {
                            Id = 59,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 19, 3, 55, 3, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-59.jpeg",
                            ProductId = 59
                        },
                        new
                        {
                            Id = 60,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 9, 23, 28, 28, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-60.jpeg",
                            ProductId = 60
                        },
                        new
                        {
                            Id = 61,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 26, 3, 8, 20, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-61.jpeg",
                            ProductId = 61
                        },
                        new
                        {
                            Id = 62,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 15, 15, 27, 33, 0, DateTimeKind.Local),
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/products/product-id-62.jpeg",
                            ProductId = 62
                        },
                        new
                        {
                            Id = 63,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 28, 0, 9, 44, 0, DateTimeKind.Local),
                            BlogId = 1,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-1.jpeg"
                        },
                        new
                        {
                            Id = 64,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 14, 7, 55, 30, 0, DateTimeKind.Local),
                            BlogId = 2,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-2.jpeg"
                        },
                        new
                        {
                            Id = 65,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 4, 21, 36, 55, 0, DateTimeKind.Local),
                            BlogId = 3,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-3.jpeg"
                        },
                        new
                        {
                            Id = 66,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 25, 5, 38, 45, 0, DateTimeKind.Local),
                            BlogId = 4,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-4.jpeg"
                        },
                        new
                        {
                            Id = 67,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 3, 6, 15, 23, 0, DateTimeKind.Local),
                            BlogId = 5,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-5.jpeg"
                        },
                        new
                        {
                            Id = 68,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 2, 29, 21, 54, 41, 0, DateTimeKind.Local),
                            BlogId = 6,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-6.jpeg"
                        },
                        new
                        {
                            Id = 69,
                            AddedBy = 0,
                            AddedDate = new DateTime(2020, 3, 10, 1, 43, 45, 0, DateTimeKind.Local),
                            BlogId = 7,
                            DeletedBy = 0,
                            IsDeleted = false,
                            ModifiedBy = 0,
                            PhotoPath = "images/slides/blog-id-7.jpeg"
                        });
                });

            modelBuilder.Entity("BuySell.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<string>("ProductDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("ProductDiscount")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("ProductRating")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedDate = new DateTime(2020, 3, 9, 8, 29, 4, 0, DateTimeKind.Local),
                            CategoryId = 5,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Apple iPhone 11 128GB Black",
                            ProductPrice = 810m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 2,
                            AddedDate = new DateTime(2020, 2, 25, 16, 28, 13, 0, DateTimeKind.Local),
                            CategoryId = 5,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Apple iPhone 11 128GB Red",
                            ProductPrice = 810m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 3,
                            AddedDate = new DateTime(2020, 3, 7, 19, 49, 7, 0, DateTimeKind.Local),
                            CategoryId = 5,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Apple iPhone 11 64GB Black",
                            ProductPrice = 710m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 4,
                            AddedDate = new DateTime(2020, 3, 21, 10, 20, 45, 0, DateTimeKind.Local),
                            CategoryId = 5,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Apple iPhone 11 64GB Green",
                            ProductPrice = 750m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 5,
                            AddedDate = new DateTime(2020, 3, 18, 4, 53, 17, 0, DateTimeKind.Local),
                            CategoryId = 5,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Apple iPhone 11 Dual SIM 64GB Yellow ",
                            ProductPrice = 813m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 6,
                            AddedDate = new DateTime(2020, 3, 23, 9, 27, 55, 0, DateTimeKind.Local),
                            CategoryId = 6,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Samsung Galaxy A20s Dual Sim SM-A207F/DS 32GB 4G",
                            ProductPrice = 162m,
                            ProductRating = (byte)2
                        },
                        new
                        {
                            Id = 7,
                            AddedDate = new DateTime(2020, 3, 2, 16, 57, 19, 0, DateTimeKind.Local),
                            CategoryId = 6,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 7,
                            ProductName = "Samsung Galaxy S9 Plus Duos SM-G965F/DS 64GB ",
                            ProductPrice = 521m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 8,
                            AddedDate = new DateTime(2020, 3, 5, 18, 41, 40, 0, DateTimeKind.Local),
                            CategoryId = 6,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 150,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Samsung Galaxy S20 Plus Dual SM-G985F/DS 8GB/128GB 4G LTE Cosmic Black ",
                            ProductPrice = 880m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 9,
                            AddedDate = new DateTime(2020, 2, 29, 19, 50, 39, 0, DateTimeKind.Local),
                            CategoryId = 6,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 18,
                            ProductName = "Samsung Galaxy Z Flip SM-F700F/DS 8GB/256GB 4G LTE Mirror Black ",
                            ProductPrice = 1445m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 10,
                            AddedDate = new DateTime(2020, 2, 29, 0, 17, 59, 0, DateTimeKind.Local),
                            CategoryId = 6,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Samsung Galaxy Z Flip SM-F700F/DS 8GB/256GB 4G LTE Mirror Gold ",
                            ProductPrice = 1629m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 11,
                            AddedDate = new DateTime(2020, 3, 4, 16, 31, 31, 0, DateTimeKind.Local),
                            CategoryId = 7,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Xiaomi Mi Note 10 Pro Dual M1910F4S 8GB/256GB 4G ",
                            ProductPrice = 455m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 12,
                            AddedDate = new DateTime(2020, 3, 15, 3, 15, 8, 0, DateTimeKind.Local),
                            CategoryId = 7,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 15,
                            ProductName = "Xiaomi Redmi Note 8 Dual M1908C3JG 4GB/128GB 4G ",
                            ProductPrice = 200m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 13,
                            AddedDate = new DateTime(2020, 3, 12, 11, 40, 15, 0, DateTimeKind.Local),
                            CategoryId = 9,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Nokia 800 Tough Dual TA-1189 4GB 4G LTE Sand ",
                            ProductPrice = 129m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 14,
                            AddedDate = new DateTime(2020, 3, 15, 4, 8, 2, 0, DateTimeKind.Local),
                            CategoryId = 9,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Nokia 2.2 Dual TA-1188 2GB/16GB 4G LTE Black  ",
                            ProductPrice = 93m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 15,
                            AddedDate = new DateTime(2020, 3, 18, 22, 17, 50, 0, DateTimeKind.Local),
                            CategoryId = 8,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Panasonic Eluga A3 Dual 16GB 4G LTE Gold ",
                            ProductPrice = 164m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 16,
                            AddedDate = new DateTime(2020, 3, 20, 12, 23, 14, 0, DateTimeKind.Local),
                            CategoryId = 10,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 8,
                            ProductName = "LG V30 Dual H930D 64GB 4G LTE Black ",
                            ProductPrice = 300m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 17,
                            AddedDate = new DateTime(2020, 3, 9, 11, 20, 24, 0, DateTimeKind.Local),
                            CategoryId = 11,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Əla telefondu",
                            ProductDiscount = 0,
                            ProductName = "Honor 8A Pro Dual JAT-L41 3GB/64GB 4G LTE Blue ",
                            ProductPrice = 164m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 18,
                            AddedDate = new DateTime(2020, 2, 26, 19, 47, 43, 0, DateTimeKind.Local),
                            CategoryId = 12,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "Əla telefon qabıdı",
                            ProductDiscount = 0,
                            ProductName = "X-Doria iPhone XS/X Case Defense Defense Shield ",
                            ProductPrice = 16m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 19,
                            AddedDate = new DateTime(2020, 3, 3, 5, 57, 49, 0, DateTimeKind.Local),
                            CategoryId = 12,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "Əla telefon qabıdı",
                            ProductDiscount = 25,
                            ProductName = "Samsung Galaxy S10 Plus Protective Standing Cover ",
                            ProductPrice = 32m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 20,
                            AddedDate = new DateTime(2020, 2, 27, 15, 2, 34, 0, DateTimeKind.Local),
                            CategoryId = 13,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Elə bil diktokedadı",
                            ProductDiscount = 0,
                            ProductName = "JBL Charge 3 Special Edition Portable Stereo Speaker ",
                            ProductPrice = 132m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 21,
                            AddedDate = new DateTime(2020, 3, 21, 8, 12, 1, 0, DateTimeKind.Local),
                            CategoryId = 13,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Toya apar, manıslıq elə",
                            ProductDiscount = 0,
                            ProductName = "JBL Playlist 150 Wireless Speaker with Chromecast ",
                            ProductPrice = 172m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 22,
                            AddedDate = new DateTime(2020, 3, 13, 15, 8, 25, 0, DateTimeKind.Local),
                            CategoryId = 14,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 100,
                            ProductDetails = "Bahalı həyat",
                            ProductDiscount = 0,
                            ProductName = "Samsung Galaxy Watch Active 2 44mm Bluetooth ",
                            ProductPrice = 335m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 23,
                            AddedDate = new DateTime(2020, 3, 18, 0, 38, 36, 0, DateTimeKind.Local),
                            CategoryId = 14,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "Bahalı həyat",
                            ProductDiscount = 0,
                            ProductName = "Apple Watch Series 5 GPS + Cellular 44mm Space Gray ",
                            ProductPrice = 568m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 24,
                            AddedDate = new DateTime(2020, 2, 29, 7, 27, 28, 0, DateTimeKind.Local),
                            CategoryId = 15,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "Ucuz və keyfiyyətli",
                            ProductDiscount = 0,
                            ProductName = "JBL TUNE 500BT Wireless On-Ear Headphones (Blue) ",
                            ProductPrice = 50m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 25,
                            AddedDate = new DateTime(2020, 3, 13, 5, 45, 48, 0, DateTimeKind.Local),
                            CategoryId = 15,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "ayfonla əla gedir",
                            ProductDiscount = 0,
                            ProductName = "Beats by Dr. Dre Beats Solo3 Wireless On-Ear Headphones ",
                            ProductPrice = 150m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 26,
                            AddedDate = new DateTime(2020, 3, 5, 19, 37, 29, 0, DateTimeKind.Local),
                            CategoryId = 16,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "ayfonla əla gedir",
                            ProductDiscount = 0,
                            ProductName = "Samsung Wireless Charger Duo with Wall Charger White ",
                            ProductPrice = 56m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 27,
                            AddedDate = new DateTime(2020, 2, 25, 19, 43, 38, 0, DateTimeKind.Local),
                            CategoryId = 16,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "ayfonla əla gedir",
                            ProductDiscount = 0,
                            ProductName = "Apple 18W USB-C Power Adapter (MU7W2) ",
                            ProductPrice = 40m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 28,
                            AddedDate = new DateTime(2020, 2, 27, 1, 50, 51, 0, DateTimeKind.Local),
                            CategoryId = 17,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "ayfonla əla gedir",
                            ProductDiscount = 0,
                            ProductName = "Anker PowerCore II 20000mAh Universal Portable ",
                            ProductPrice = 50m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 29,
                            AddedDate = new DateTime(2020, 2, 27, 9, 7, 1, 0, DateTimeKind.Local),
                            CategoryId = 17,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 200,
                            ProductDetails = "ayfonla əla gedir",
                            ProductDiscount = 0,
                            ProductName = "Anker PowerCore 10000mAh Compact High-Capacity ",
                            ProductPrice = 20m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 30,
                            AddedDate = new DateTime(2020, 2, 24, 12, 37, 38, 0, DateTimeKind.Local),
                            CategoryId = 18,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 20,
                            ProductDetails = "televizorun da ayfon olsun",
                            ProductDiscount = 0,
                            ProductName = "Apple TV 4K 32GB (MQD22) ",
                            ProductPrice = 200m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 31,
                            AddedDate = new DateTime(2020, 2, 29, 8, 25, 14, 0, DateTimeKind.Local),
                            CategoryId = 19,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 20,
                            ProductDetails = "Zəngdən başqa hərşey",
                            ProductDiscount = 0,
                            ProductName = "Apple iPod touch 32GB 7th Generation (Pink) ",
                            ProductPrice = 240m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 32,
                            AddedDate = new DateTime(2020, 3, 1, 13, 55, 25, 0, DateTimeKind.Local),
                            CategoryId = 20,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 20,
                            ProductDetails = "Azərbaycan serialları artıq Türk serialı dadında",
                            ProductDiscount = 0,
                            ProductName = "LG 43-Inch 4K UHD TV 43UK6400 Black ",
                            ProductPrice = 370m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 33,
                            AddedDate = new DateTime(2020, 2, 23, 12, 57, 39, 0, DateTimeKind.Local),
                            CategoryId = 20,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 20,
                            ProductDetails = "pleysteyşn üçün yaradılıb elə bil",
                            ProductDiscount = 0,
                            ProductName = "Sony 55-inch 4K Ultra HD LED TV 55X9000E Black ",
                            ProductPrice = 1400m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 34,
                            AddedDate = new DateTime(2020, 3, 18, 7, 18, 36, 0, DateTimeKind.Local),
                            CategoryId = 21,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 20,
                            ProductDetails = "Futbol heç bu qədər maraqlı olmamışdı",
                            ProductDiscount = 0,
                            ProductName = "Epson EB-U42 ",
                            ProductPrice = 880m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 35,
                            AddedDate = new DateTime(2020, 3, 15, 10, 16, 37, 0, DateTimeKind.Local),
                            CategoryId = 23,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 150,
                            ProductDetails = "əsl smm üçün",
                            ProductDiscount = 14,
                            ProductName = "Lenovo IdeaPad 330S-81F400VFAX Grey ",
                            ProductPrice = 880m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 36,
                            AddedDate = new DateTime(2020, 2, 29, 14, 15, 24, 0, DateTimeKind.Local),
                            CategoryId = 23,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "Geymrlar üçün",
                            ProductDiscount = 0,
                            ProductName = "ASUS ROG Zephyrus GX701GXR-HG122T Gaming ",
                            ProductPrice = 3880m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 37,
                            AddedDate = new DateTime(2020, 3, 23, 16, 41, 15, 0, DateTimeKind.Local),
                            CategoryId = 23,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 250,
                            ProductDetails = "ucuz və sərfəli",
                            ProductDiscount = 0,
                            ProductName = "Acer Aspire A1 A114-006 Black (Celeron N4000, 4GB, 64GB, 14.0\" LED, Intel HD, Win10) Engl / Arab",
                            ProductPrice = 259m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 38,
                            AddedDate = new DateTime(2020, 3, 23, 5, 25, 46, 0, DateTimeKind.Local),
                            CategoryId = 23,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 150,
                            ProductDetails = "vintelyator bizlik deyil",
                            ProductDiscount = 0,
                            ProductName = "HP Laptop 15-da1080ur 7SH99EA Black (Core i7, 8GB, 1TB, 15.6\"HD, NVIDIA GF, DOS) Eng / Rus ",
                            ProductPrice = 830m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 39,
                            AddedDate = new DateTime(2020, 3, 23, 19, 59, 56, 0, DateTimeKind.Local),
                            CategoryId = 23,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 250,
                            ProductDetails = "APPLE",
                            ProductDiscount = 0,
                            ProductName = "Apple MacBook Pro 13.3\"  MV972 with Touch Bar(Mid 2019) Space Gray ",
                            ProductPrice = 2040m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 40,
                            AddedDate = new DateTime(2020, 3, 16, 2, 29, 54, 0, DateTimeKind.Local),
                            CategoryId = 24,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 14,
                            ProductName = "Lenovo ideacentre A340-24ICB F0E6009RAX ",
                            ProductPrice = 838m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 41,
                            AddedDate = new DateTime(2020, 3, 3, 23, 53, 44, 0, DateTimeKind.Local),
                            CategoryId = 24,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Apple iMac Pro 27\" MQ2Y2 with Retina 5K Display(Late 2017) Space Gray ",
                            ProductPrice = 5040m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 42,
                            AddedDate = new DateTime(2020, 2, 25, 15, 17, 1, 0, DateTimeKind.Local),
                            CategoryId = 24,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Microsoft Surface Studio 2 Multi-Touch All-in-One (Core i7, 16GB, 1TB SSD, 28\" PixelSense Touch, 6GB GTX, Win10 Pro) Engl / Arab ",
                            ProductPrice = 3900m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 43,
                            AddedDate = new DateTime(2020, 3, 5, 20, 37, 9, 0, DateTimeKind.Local),
                            CategoryId = 24,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "HP 290 G2 Microtower 3VA90EA Black (Core i3, 4GB, 500GB, Intel HD, 18.5HD, DOS) Eng/Rus ",
                            ProductPrice = 550m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 44,
                            AddedDate = new DateTime(2020, 3, 8, 0, 31, 51, 0, DateTimeKind.Local),
                            CategoryId = 24,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Apple iMac 21.5\" MMQA2(Mid 2017) ",
                            ProductPrice = 1040m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 45,
                            AddedDate = new DateTime(2020, 3, 10, 18, 49, 15, 0, DateTimeKind.Local),
                            CategoryId = 25,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 3,
                            ProductName = "Apple iPad 10.2 Wi - Fi 32GB Gold ",
                            ProductPrice = 315m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 46,
                            AddedDate = new DateTime(2020, 3, 5, 11, 6, 27, 0, DateTimeKind.Local),
                            CategoryId = 25,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Apple iPad 10.2 Wi-Fi 32GB Gold ",
                            ProductPrice = 630m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 47,
                            AddedDate = new DateTime(2020, 3, 6, 9, 49, 52, 0, DateTimeKind.Local),
                            CategoryId = 27,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "HP ScanJet Pro 2500 f1 (L2747A) ",
                            ProductPrice = 330m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 48,
                            AddedDate = new DateTime(2020, 3, 17, 11, 42, 35, 0, DateTimeKind.Local),
                            CategoryId = 27,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "HP LaserJet Pro M227fdn Printer (G3Q79A) ",
                            ProductPrice = 330m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 49,
                            AddedDate = new DateTime(2020, 3, 19, 2, 28, 7, 0, DateTimeKind.Local),
                            CategoryId = 28,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Transcend 1TB StoreJet TS1TSJ25M3 Anti-Shock ",
                            ProductPrice = 70m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 50,
                            AddedDate = new DateTime(2020, 3, 13, 14, 8, 31, 0, DateTimeKind.Local),
                            CategoryId = 28,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "WD 2TB My Passport USB 3.0 Secure Portable Hard ",
                            ProductPrice = 80m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 51,
                            AddedDate = new DateTime(2020, 3, 16, 8, 10, 4, 0, DateTimeKind.Local),
                            CategoryId = 29,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Microsoft Surface Arc Wireless Mouse Black (2017) ",
                            ProductPrice = 70m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 52,
                            AddedDate = new DateTime(2020, 3, 18, 10, 51, 26, 0, DateTimeKind.Local),
                            CategoryId = 29,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Apple Magic Keyboard (MLA22) ",
                            ProductPrice = 108m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 53,
                            AddedDate = new DateTime(2020, 3, 15, 16, 29, 50, 0, DateTimeKind.Local),
                            CategoryId = 30,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "HP 32s Monitor 2UD96AA Black/Silver ",
                            ProductPrice = 290m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 54,
                            AddedDate = new DateTime(2020, 3, 11, 0, 21, 5, 0, DateTimeKind.Local),
                            CategoryId = 30,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "HP 27es 68.58 cm (27\") Monitor(T3M86AA) ",
                            ProductPrice = 240m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 55,
                            AddedDate = new DateTime(2020, 3, 19, 11, 18, 44, 0, DateTimeKind.Local),
                            CategoryId = 32,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Nintendo Switch with Neon Blue and Red Joy-Con Controllers ",
                            ProductPrice = 320m,
                            ProductRating = (byte)4
                        },
                        new
                        {
                            Id = 56,
                            AddedDate = new DateTime(2020, 2, 27, 12, 6, 12, 0, DateTimeKind.Local),
                            CategoryId = 32,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Microsoft Xbox One S 1TB Gaming Console (White) ",
                            ProductPrice = 240m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 57,
                            AddedDate = new DateTime(2020, 3, 10, 11, 36, 10, 0, DateTimeKind.Local),
                            CategoryId = 32,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Sony PlayStation 4 Pro PS4 Pro 1TB Black ",
                            ProductPrice = 360m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 58,
                            AddedDate = new DateTime(2020, 3, 8, 7, 8, 12, 0, DateTimeKind.Local),
                            CategoryId = 33,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 150,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Microsoft Xbox One Wireless Controller ",
                            ProductPrice = 43m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 59,
                            AddedDate = new DateTime(2020, 3, 10, 0, 20, 30, 0, DateTimeKind.Local),
                            CategoryId = 33,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 150,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Sony PlayStation 4 DualShock 4 Wireless ",
                            ProductPrice = 53m,
                            ProductRating = (byte)5
                        },
                        new
                        {
                            Id = 60,
                            AddedDate = new DateTime(2020, 3, 14, 5, 2, 21, 0, DateTimeKind.Local),
                            CategoryId = 34,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Sony :Battle Chasers: Nightwar for PlayStation 4 (R2) ",
                            ProductPrice = 27m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 61,
                            AddedDate = new DateTime(2020, 2, 28, 10, 30, 50, 0, DateTimeKind.Local),
                            CategoryId = 34,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Sony :For Honor Deluxe Edition for PlayStation 4 (R2) ",
                            ProductPrice = 27m,
                            ProductRating = (byte)3
                        },
                        new
                        {
                            Id = 62,
                            AddedDate = new DateTime(2020, 3, 6, 10, 52, 1, 0, DateTimeKind.Local),
                            CategoryId = 34,
                            IsAvailable = true,
                            IsDeleted = false,
                            ProductCount = 50,
                            ProductDetails = "",
                            ProductDiscount = 0,
                            ProductName = "Sony :Cartoon Network: Battle Crashers for PlayStation 4 ",
                            ProductPrice = 27m,
                            ProductRating = (byte)3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BuySell.Models.Category", b =>
                {
                    b.HasOne("BuySell.Models.Category", "Parent")
                        .WithMany("Categories")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("BuySell.Models.Comment", b =>
                {
                    b.HasOne("BuySell.Models.Blog", "Blog")
                        .WithMany("Comments")
                        .HasForeignKey("BlogId");

                    b.HasOne("BuySell.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("BuySell.Models.Order", b =>
                {
                    b.HasOne("BuySell.Models.AppUser", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuySell.Models.OrderDetail", b =>
                {
                    b.HasOne("BuySell.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuySell.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuySell.Models.Photo", b =>
                {
                    b.HasOne("BuySell.Models.Blog", "Blog")
                        .WithMany("Photos")
                        .HasForeignKey("BlogId");

                    b.HasOne("BuySell.Models.Product", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("BuySell.Models.Product", b =>
                {
                    b.HasOne("BuySell.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BuySell.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BuySell.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuySell.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BuySell.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
